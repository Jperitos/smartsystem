<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Janitors Assigned Areas</title>
  <style>
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 1rem;
    }
    th, td {
      border: 1px solid #aaa;
      padding: 0.5rem;
      text-align: left;
    }
    th {
      background-color: #eee;
    }
  </style>
</head>
<body>
  <div id="clock" style="font-size: 24px; font-family: monospace;"></div>
  <h2>Janitors and Their Assigned Areas</h2>
  <table id="janitorsTable">
    <thead>
      <tr>
        <th>#</th>
        <th>Name</th>
        <th>Assigned Area</th>
      </tr>
    </thead>
    <tbody id="janitorsTableBody">
      <!-- Rows will be inserted here -->
    </tbody>
  </table>

  <script>
    // Helper to map floor names to numeric order
    function floorOrder(floorName) {
      if (!floorName) return 1000; // Unknown floors go last
      const floorMap = {
        'First floor': 1,
        'Second floor': 2,
        'Third floor': 3,
        'Fourth floor': 4,
        'Fifth floor': 5,
        'Sixth floor': 6
      };
      return floorMap[floorName] || 1000;
    }

    async function loadJanitors() {
      try {
        const res = await fetch('/api/staff');
        if (!res.ok) throw new Error('Failed to fetch janitors');
        const janitors = await res.json();

        // Sort janitors by their assign_area floor order
        janitors.sort((a, b) => floorOrder(a.assign_area) - floorOrder(b.assign_area));

        const tbody = document.getElementById('janitorsTableBody');
        tbody.innerHTML = ''; // Clear existing rows

        janitors.forEach((janitor, index) => {
          const tr = document.createElement('tr');

          // Number column
          const tdIndex = document.createElement('td');
          tdIndex.textContent = index + 1;
          tr.appendChild(tdIndex);

          // Name column
          const tdName = document.createElement('td');
          tdName.textContent = janitor.name || 'N/A';
          tr.appendChild(tdName);

          // Assigned Area column
          const tdArea = document.createElement('td');
          tdArea.textContent = janitor.assign_area || 'N/A';
          tr.appendChild(tdArea);

          tbody.appendChild(tr);
        });
      } catch (error) {
        console.error(error);
        alert('Error loading janitors: ' + error.message);
      }
    }

    // Load janitors on page load
    window.addEventListener('DOMContentLoaded', loadJanitors);


    function updateClock() {
  const now = new Date();
  let hours = now.getHours();
  const minutes = now.getMinutes();
  const seconds = now.getSeconds();
  const ampm = hours >= 12 ? 'PM' : 'AM';

  hours = hours % 12;
  hours = hours ? hours : 12; // the hour '0' should be '12'

  // Pad minutes and seconds with leading zeros
  const strMinutes = minutes.toString().padStart(2, '0');
  const strSeconds = seconds.toString().padStart(2, '0');

  const timeString = `${hours}:${strMinutes}:${strSeconds} ${ampm}`;
  document.getElementById('clock').textContent = timeString;
}

updateClock();
setInterval(updateClock, 1000);

  </script>
</body>
</html>
